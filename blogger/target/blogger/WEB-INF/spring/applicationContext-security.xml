<?xml version="1.0" encoding="UTF-8"?>

<!--
  - Sample namespace-based configuration
  -
  -->

<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.0.xsd">

    <global-method-security pre-post-annotations="enabled">
        <!-- AspectJ pointcut expression that locates our "post" method and applies security that way
        <protect-pointcut expression="execution(* bigbank.*Service.post*(..))" access="ROLE_TELLER"/>
        -->
    </global-method-security>
    <http auto-config="false" entry-point-ref="authenticationProcessingFilterEntryPoint" use-expressions="true">
    	<session-management invalid-session-url="/admin/timeout.jsp">  
            <concurrency-control max-sessions="10" error-if-maximum-exceeded="true" />  
        </session-management>  
        <custom-filter position="FORM_LOGIN_FILTER" ref="loginFilter"/>
        <intercept-url pattern="/admin/login" access="permitAll" />
        <intercept-url pattern="/index" access="permitAll" />
        <intercept-url pattern="/admin/*" access="isAuthenticated()" />
        <intercept-url pattern="/changepassword_result" access="permitAll" />
         <intercept-url pattern="/changepassword" access="permitAll" /> 
         <intercept-url pattern="/admin/*.jsp" access="isAuthenticated()" /> 
         <intercept-url pattern="/blog/*" access="permitAll" />
         
    	       
<!--        
        <form-login login-page="/login" authentication-failure-url="/login?login_error=1"/>
-->        
        <logout invalidate-session="true" logout-success-url="/admin/timeout.jsp"/>
<!--
        <remember-me />
-->        
<!--
    Uncomment to enable X509 client authentication support
        <x509 />
-->
        <!-- Uncomment to limit the number of sessions a user can have -->
<!--  
        <session-management>
            <concurrency-control max-sessions="1" error-if-maximum-exceeded="true" />
        </session-management>
-->
    </http>
	
    <!--
    Usernames/Passwords are
        rod/koala
        dianne/emu
        scott/wombat
        peter/opal
    -->
    <authentication-manager alias="authenticationManager">
        <authentication-provider>
        <password-encoder hash="plaintext" />
             <jdbc-user-service data-source-ref="dataSource"
            users-by-username-query=
            	"SELECT username, password, enabled FROM users WHERE username = ?;"
			authorities-by-username-query=
				"SELECT username, authority 
				FROM users u, authorities a
				WHERE u.userid = a.userid AND u.username = ?;"/>
		
           	
        <!--     <user-service>
            	
                <user name="rod" password="password" authorities="ROLE_SUPERVISOR, ROLE_USER, ROLE_TELLER" />
                <user name="dianne" password="password" authorities="ROLE_USER,ROLE_TELLER" />
                <user name="scott" password="password" authorities="ROLE_USER" />
                <user name="peter" password="password" authorities="ROLE_USER" />
            </user-service>
            -->
        </authentication-provider>
    </authentication-manager>

<!-- added by Danny Chan (start) -->

    <beans:bean id="loginFilter" class="com.blogger.app.authentication.LoginFilter">
            <beans:property name="filterProcessesUrl" value="/j_spring_security_check"></beans:property>  
    	<beans:property name="authenticationManager" ref="authenticationManager" />
    	<beans:property name="messageSource" ref="messageSource" />
    	
	<!--<beans:property name="sessionAuthenticationStrategy" ref="sas" />  -->
    	<beans:property name="authenticationFailureHandler" ref="failureHandler" />
    	<beans:property name="authenticationSuccessHandler" ref="successHandler" />
    </beans:bean>

	<beans:bean id="sas" class="org.springframework.security.web.authentication.session.ConcurrentSessionControlAuthenticationStrategy">
		<beans:constructor-arg name="sessionRegistry" ref="sessionRegistry" />
		<beans:property name="maximumSessions" value="1" />
		<beans:property name="exceptionIfMaximumExceeded" value="true" />
	</beans:bean>

	<beans:bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl" />

	<beans:bean id="concurrencyFilter" class="org.springframework.security.web.session.ConcurrentSessionFilter">
		<beans:constructor-arg name="sessionRegistry" ref="sessionRegistry" />
		<!--<beans:property name="expiredUrl" value="/session-expired.htm" /> -->
	</beans:bean>
  
    <beans:bean id="authenticationProcessingFilterEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
        <beans:constructor-arg name="loginFormUrl" value="/admin/login" />
    </beans:bean>

    <beans:bean id="failureHandler" class="com.blogger.app.authentication.authenticationFailureHandler">
        <beans:property name="defaultFailureUrl" value="/admin/login?login_error=1" />
    </beans:bean>

    <beans:bean id="successHandler" class="com.blogger.app.authentication.authenticationSuccessHandler">
    </beans:bean>

<!-- added by Danny Chan (end) -->

</beans:beans>
